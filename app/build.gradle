apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply from: "src/main/java/life/plank/juna/zone/data/build.gradle"
apply from: "src/main/java/life/plank/juna/zone/domain/build.gradle"
apply from: "src/main/java/life/plank/juna/zone/view/build.gradle"

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    signingConfigs {
        release {
            storeFile file(JUNA_RELEASE_STORE_FILE)
            storePassword JUNA_RELEASE_STORE_PASSWORD
            keyAlias JUNA_RELEASE_KEY_ALIAS
            keyPassword JUNA_RELEASE_STORE_PASSWORD
        }
    }
    playAccountConfigs {
        defaultAccountConfig {
            serviceAccountEmail = JUNA_SERVICE_ACCOUNT_EMAIL
            pk12File = file(JUNA_PLAY_STORE_FILE)
        }
    }
    defaultConfig {
        multiDexEnabled true
        applicationId "life.plank.juna.zone"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 9
        versionName "1.0.1-jenkins-build"
        renderscriptTargetApi 26
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        playAccountConfig = playAccountConfigs.defaultAccountConfig
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'life.plank.juna.zone'
        ]
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.google.android.gms:play-services-gcm:12.0.0"
    compile 'com.google.android.gms:play-services-auth:12.0.0'
    compile 'net.openid:appauth:0.7.0'
    compile 'com.microsoft.azure:azure-notifications-handler:1.0.1@aar'
    compile 'com.microsoft.azure:notification-hubs-android-sdk:0.4@aar'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    //testCompile 'org.mockito:mockito-core:2.7.21'
    testCompile 'org.powermock:powermock-module-junit4:1.6.1'
    testCompile 'org.powermock:powermock-api-mockito:1.6.1'
    testCompile "org.mockito:mockito-core:1.10.8"
    testCompile "org.robolectric:robolectric:3.7.1"
    compile "com.google.firebase:firebase-core:12.0.0"
    compile 'com.google.firebase:firebase-messaging:12.0.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.10.0'

}

repositories {
    maven {
        url "http://dl.bintray.com/microsoftazuremobile/SDK"
    }
}

apply plugin: 'com.google.gms.google-services'

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.2'
            }
        }
    }
}




